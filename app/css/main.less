@grey: #363636;
@offwhite: #ddd;
@white: #fff;

body{ 
	background-color: @offwhite;
}

h1{
	color: @grey;
}

.container{
	border: solid rgba(255,255,255,0.3) 1px;
}

li{
	list-style-type: none;
}

.clr-item{
	width: 75px;
	height: 75px;
	// display: inline-block;
	border: solid 1px transparent;
	font-weight: bold;
   -webkit-transition: 800ms ease;
  perspective-origin: 90% 90%;

}

.selection{
	li{
		display: inline-block;
	}
}

.mix{
	// width: 475px;
}

.button:hover, button:hover, input[type="submit"]:hover, input[type="reset"]:hover, input[type="button"]:hover, .button:focus, button:focus, input[type="submit"]:focus, input[type="reset"]:focus, input[type="button"]:focus{
	color: #ddd;
	border-color: #eee;
}

.cmn-toggle {
  position: absolute;
  margin-left: -9999px;
  visibility: hidden;
	+ label {
			display: block;
			position: relative;
			cursor: pointer;
			outline: none;
			user-select: none;
	}
}

.full-width{
	width: 100%;
}

.highlight {
  -webkit-transform: rotate3D(1,0,0,45deg);
  -webkit-transform-origin: bottom left;
  border: 1px solid transparent;
  background: #ccc !important;
}

.repeated{

}

.repeated.ng-enter, .repeated.ng-move {
  transition: all 1.5s linear;
  opacity: 0;
  border: 1px solid transparent;
  
}

/*
 The ng-enter-active and ng-move-active
 are where the transition destination properties
 are set so that the animation knows what to
 animate.
*/
.repeated.ng-enter.ng-enter-active,
.repeated.ng-move.ng-move-active {
  opacity: 1;
}

/*
  We're using CSS keyframe animations for when
  the leave event is triggered for the element
  that has the .repeated class
*/
.repeated.ng-leave {
  animation: 1s my_animation;
}

@keyframes my_animation {
  from { opacity:1; }
  to { opacity:0; }
}

ul.clr-list{
	height: 75px;
}

.align-center{
	text-align: center;
}

.button-text{
	color: #333;
	font-size: 15px;
}

.larger-text{
	font-size: 120%;
}

.result{

}

/***********************modal***********************/

.remodal-bg.with-red-theme.remodal-is-opening,
.remodal-bg.with-red-theme.remodal-is-opened {
  filter: none;
}

.remodal-overlay.with-red-theme {
  background-color: #f44336;
}

.remodal.with-red-theme {
  background: #fff;
}

.remodal{
	// margin: 0 auto;
	// margin-top: -400px;
}


.ng-modal {
  position: fixed;
  z-index: 9999;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
filter: blur(0px);
}

.ng-modal.ng-hide-add .ng-modal.ng-hide-remove {
  /* this is required as of 1.3x to properly
     apply all styling in a show/hide animation */
  transition: 0s linear all;
}
.ng-modal.ng-hide-add-active,
.ng-modal.ng-hide-remove-active {
  /* the transition is defined in the active class */
  transition: 1s linear all;
}

.ng-modal-overlay {
  position: absolute;
  z-index: 9999;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000000;
  opacity: 0.8;
}
.ng-modal-dialog {
  z-index: 10000;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
  background-color: #fff;
  box-shadow: 4px 4px 80px #000;
  -webkit-box-shadow: 4px 4px 80px #000;
  -moz-box-shadow: 4px 4px 80px #000;
  -ms-box-shadow: 4px 4px 80px #000;
  -o-box-shadow: 4px 4px 80px #000;
  padding: 10px;
}
.ng-modal-dialog-content {
  overflow: hidden;
  height: 100%;
}
.ng-modal-close {
  position: absolute;
  top: 3px;
  right: 5px;
  cursor: pointer;
  font-size: 120%;
  padding: 5px;
  display: inline-block;
}
.ng-modal-close-x {
  font-weight: bold;
  font-family: Arial, sans-serif;
}
.ng-modal-title {
  font-weight: bold;
  font-size: 200%;
  display: block;
  margin-bottom: 10px;
  padding-bottom: 7px;
  border-bottom: solid 1px #999;
}

.blur{
  filter: blur(3px);
}

.no-blur{
  filter: blur(0px);
}